!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ECA	proto18.py	/^ECA = 0.140 + EREST_ACT #\/\/ 0.080$/;"	v
EK	proto18.py	/^EK = -0.015 + EREST_ACT #\/\/ -0.075$/;"	v
ENA	proto18.py	/^ENA = 0.115 + EREST_ACT #\/\/ 0.055$/;"	v
EREST_ACT	diffusionOnly.py	/^EREST_ACT = -70e-3$/;"	v
EREST_ACT	lm2.py	/^EREST_ACT = -70e-3$/;"	v
EREST_ACT	loadMulti.py	/^EREST_ACT = -70e-3$/;"	v
EREST_ACT	minimal.py	/^EREST_ACT = -70e-3$/;"	v
EREST_ACT	proto18.py	/^EREST_ACT = -0.060 #\/* hippocampal cell resting potl *\/$/;"	v
EREST_ACT	x_compt.py	/^EREST_ACT = -70e-3$/;"	v
PID	lm2.py	/^PID = os.getpid()$/;"	v
PID	loadMulti.py	/^PID = os.getpid()$/;"	v
SOMA_A	proto18.py	/^SOMA_A = 3.320e-9       #\/\/ soma area in square meters$/;"	v
addPlot	diffusionOnly.py	/^def addPlot( objpath, field, plot ):$/;"	f
addPlot	lm2.py	/^def addPlot( objpath, field, plot ):$/;"	f
addPlot	loadMulti.py	/^def addPlot( objpath, field, plot ):$/;"	f
addPlot	minimal.py	/^def addPlot( objpath, field, plot ):$/;"	f
addPlot	x_compt.py	/^def addPlot( objpath, field, plot ):$/;"	f
capool	runcell18.py	/^capool = moose.element( '\/cell\/soma\/Ca_conc' )$/;"	v
catab	runcell18.py	/^catab = moose.Table( '\/graphs\/ca' )$/;"	v
cellId	runcell18.py	/^cellId = moose.loadModel( 'ca1_asym.p', '\/cell', "hsolve" )$/;"	v
do_nothing	lm2.py	/^def do_nothing( *args ):$/;"	f
do_nothing	loadMulti.py	/^def do_nothing( *args ):$/;"	f
dt	runcell18.py	/^dt = 50e-6$/;"	v
dumpPlots	diffusionOnly.py	/^def dumpPlots( fname ):$/;"	f
dumpPlots	lm2.py	/^def dumpPlots( fname ):$/;"	f
dumpPlots	loadMulti.py	/^def dumpPlots( fname ):$/;"	f
dumpPlots	minimal.py	/^def dumpPlots( fname ):$/;"	f
dumpPlots	runcell18.py	/^def dumpPlots( fname ):$/;"	f
dumpPlots	x_compt.py	/^def dumpPlots( fname ):$/;"	f
graphs	runcell18.py	/^graphs = moose.Neutral( '\/graphs' )$/;"	v
hsolve	runcell18.py	/^hsolve = moose.HSolve( '\/cell\/hsolve' )$/;"	v
library	runcell18.py	/^library = moose.Neutral( '\/library' )$/;"	v
loadChem	diffusionOnly.py	/^def loadChem( neuroCompt, spineCompt, psdCompt ):$/;"	f
loadChem	lm2.py	/^def loadChem( chemFile, diffLength ):$/;"	f
loadChem	loadMulti.py	/^def loadChem( neuroCompt, spineCompt, psdCompt ):$/;"	f
loadChem	minimal.py	/^def loadChem( neuroCompt, spineCompt, psdCompt ):$/;"	f
loadChem	x_compt.py	/^def loadChem( neuroCompt, spineCompt, psdCompt ):$/;"	f
loadElec	diffusionOnly.py	/^def loadElec():$/;"	f
loadElec	lm2.py	/^def loadElec( elecFile ):$/;"	f
loadElec	loadMulti.py	/^def loadElec():$/;"	f
loadElec	minimal.py	/^def loadElec():$/;"	f
loadElec	x_compt.py	/^def loadElec():$/;"	f
loadStimulus	lm2.py	/^def loadStimulus( freq, receptorPath, weight, delay ):$/;"	f
main	diffusionOnly.py	/^def main():$/;"	f
main	lm2.py	/^def main():$/;"	f
main	loadMulti.py	/^def main():$/;"	f
main	minimal.py	/^def main():$/;"	f
main	x_compt.py	/^def main():$/;"	f
makeChemPlots	diffusionOnly.py	/^def makeChemPlots():$/;"	f
makeChemPlots	lm2.py	/^def makeChemPlots( compts, index ):$/;"	f
makeChemPlots	loadMulti.py	/^def makeChemPlots():$/;"	f
makeChemPlots	minimal.py	/^def makeChemPlots():$/;"	f
makeChemPlots	x_compt.py	/^def makeChemPlots():$/;"	f
makeChemSolver	lm2.py	/^def makeChemSolver( compartmentPath ):$/;"	f
makeElecPlots	diffusionOnly.py	/^def makeElecPlots():$/;"	f
makeElecPlots	lm2.py	/^def makeElecPlots( compts ):$/;"	f
makeElecPlots	loadMulti.py	/^def makeElecPlots():$/;"	f
makeElecPlots	minimal.py	/^def makeElecPlots():$/;"	f
makeElecPlots	x_compt.py	/^def makeElecPlots():$/;"	f
makeNeuroMeshModel	diffusionOnly.py	/^def makeNeuroMeshModel():$/;"	f
makeNeuroMeshModel	lm2.py	/^def makeNeuroMeshModel( elecFile, chemFile, cellPortion, chemCa ):$/;"	f
makeNeuroMeshModel	loadMulti.py	/^def makeNeuroMeshModel():$/;"	f
makeNeuroMeshModel	minimal.py	/^def makeNeuroMeshModel():$/;"	f
makeNeuroMeshModel	x_compt.py	/^def makeNeuroMeshModel():$/;"	f
make_Ca	proto18.py	/^def make_Ca():$/;"	f
make_Ca_NMDA	proto18.py	/^def make_Ca_NMDA():$/;"	f
make_Ca_conc	proto18.py	/^def make_Ca_conc():$/;"	f
make_K_A	proto18.py	/^def make_K_A():$/;"	f
make_K_AHP	proto18.py	/^def make_K_AHP():$/;"	f
make_K_C	proto18.py	/^def make_K_C():$/;"	f
make_K_DR	proto18.py	/^def make_K_DR():$/;"	f
make_NMDA	proto18.py	/^def make_NMDA():$/;"	f
make_NMDA_Ca_conc	proto18.py	/^def make_NMDA_Ca_conc():$/;"	f
make_Na	proto18.py	/^def make_Na():$/;"	f
make_axon	proto18.py	/^def make_axon():$/;"	f
make_glu	proto18.py	/^def make_glu():$/;"	f
math	diffusionOnly.py	/^import math$/;"	i
math	lm2.py	/^import math$/;"	i
math	loadMulti.py	/^import math$/;"	i
math	minimal.py	/^import math$/;"	i
math	proto18.py	/^import math$/;"	i
math	x_compt.py	/^import math$/;"	i
moose	diffusionOnly.py	/^import moose$/;"	i
moose	lm2.py	/^import moose$/;"	i
moose	loadMulti.py	/^import moose$/;"	i
moose	minimal.py	/^import moose$/;"	i
moose	proto18.py	/^import moose$/;"	i
moose	runcell18.py	/^import moose$/;"	i
moose	x_compt.py	/^import moose$/;"	i
moveCompt	diffusionOnly.py	/^def moveCompt( path, oldParent, newParent ):$/;"	f
moveCompt	lm2.py	/^def moveCompt( path, oldParent, newParent ):$/;"	f
moveCompt	loadMulti.py	/^def moveCompt( path, oldParent, newParent ):$/;"	f
moveCompt	minimal.py	/^def moveCompt( path, oldParent, newParent ):$/;"	f
moveCompt	x_compt.py	/^def moveCompt( path, oldParent, newParent ):$/;"	f
numpy	proto18.py	/^import numpy$/;"	i
os	diffusionOnly.py	/^import os$/;"	i
os	lm2.py	/^import os$/;"	i
os	loadMulti.py	/^import os$/;"	i
os	minimal.py	/^import os$/;"	i
os	runcell18.py	/^import os$/;"	i
os	x_compt.py	/^import os$/;"	i
proto18	diffusionOnly.py	/^import proto18$/;"	i
proto18	lm2.py	/^import proto18$/;"	i
proto18	loadMulti.py	/^import proto18$/;"	i
proto18	minimal.py	/^import proto18$/;"	i
proto18	runcell18.py	/^import proto18$/;"	i
proto18	x_compt.py	/^import proto18$/;"	i
setAdaptor	lm2.py	/^def setAdaptor( chemCaPath):$/;"	f
signal	lm2.py	/^import signal$/;"	i
signal	loadMulti.py	/^import signal$/;"	i
soma	runcell18.py	/^soma = moose.element( '\/cell\/soma' )$/;"	v
sys	diffusionOnly.py	/^import sys$/;"	i
sys	lm2.py	/^import sys$/;"	i
sys	loadMulti.py	/^import sys$/;"	i
sys	minimal.py	/^import sys$/;"	i
sys	x_compt.py	/^import sys$/;"	i
tab	runcell18.py	/^tab = moose.Table( '\/graphs\/soma' )$/;"	v
testNeuroMeshMultiscale	diffusionOnly.py	/^def testNeuroMeshMultiscale():$/;"	f
testNeuroMeshMultiscale	lm2.py	/^def testNeuroMeshMultiscale():$/;"	f
testNeuroMeshMultiscale	loadMulti.py	/^def testNeuroMeshMultiscale():$/;"	f
testNeuroMeshMultiscale	minimal.py	/^def testNeuroMeshMultiscale():$/;"	f
testNeuroMeshMultiscale	x_compt.py	/^def testNeuroMeshMultiscale():$/;"	f
