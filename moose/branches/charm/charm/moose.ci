mainmodule moose {

  readonly unsigned int readonlyNumElementContainers;
  readonly unsigned int readonlyNumUsefulElementContainers;
  readonly unsigned int readonlyVirtualizationRatio;

  readonly CProxy_Main readonlyMainProxy;
  readonly CProxy_ElementContainer readonlyElementContainerProxy;
  readonly CProxy_LookupHelper readonlyLookupHelperProxy;

  readonly SimulationParameters readonlySimulationParameters;
  readonly CProxy_ShellCcsInterface readonlyShellCcsInterfaceProxy;

  initnode void ccsRegistration();

  
  message ElementDataMsg {
    Qinfo qinfo_[];
    double data_[];

    DirectQbufEntry qinfoDirect_[];
    double dataDirect_[];
  };

  mainchare Main {
    entry Main(CkArgMsg *m);

    entry void elementsReady();
    entry void shellCcsInterfacesReady();
    entry void lookupHelpersReady();

    entry void waitUntilInitDone(){
      when shellCcsInterfacesReady(), 
           elementsReady(), 
           lookupHelpersReady() atomic {
        thisProxy.commence();
      }
    };

    entry [threaded] void commence();
  };

  array [1D] ElementContainer {
    entry ElementContainer(const CkCallback &cb);
    entry void registerSelf(const CkCallback &cb);

    entry void newIteration();
    entry void exchange(ElementDataMsg *m);
  };

  group LookupHelper {
    entry LookupHelper(vector< string > &s_argv, const CkCallback &cb);
    entry void initShell(const CkCallback &cb);

    entry void reinitIterationDone();
    entry void runIterationDone();

    entry void newIteration();
    entry void invokeFinishCallback();
  };

  group ParallelTestHelper {
    entry ParallelTestHelper();

    entry void doSerialUnitTests(const CkCallback &cb);
    entry [threaded] void doMpiTests(const CkCallback &cb);
    entry [threaded] void doProcessTests(const CkCallback &cb);
    entry [threaded] void doRegressionTests(const CkCallback &cb);
  };

  group ShellCcsInterface {
    entry ShellCcsInterface(const CkCallback &cb);
  };
};
