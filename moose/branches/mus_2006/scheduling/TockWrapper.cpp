#include "header.h"
#include "Tock.h"
#include "TockWrapper.h"


Finfo* TockWrapper::fieldArray_[] =
{
///////////////////////////////////////////////////////
// Field definitions
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
// MsgSrc definitions
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
// MsgDest definitions
///////////////////////////////////////////////////////
	new Dest1Finfo< ProcInfo >(
		"tickIn", &TockWrapper::processFunc,
		&TockWrapper::getTickConn, "", 1 ),
	new Dest0Finfo(
		"reinitIn", &TockWrapper::reinitFunc,
		&TockWrapper::getTickConn, "", 1 ),
///////////////////////////////////////////////////////
// Synapse definitions
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
// Shared definitions
///////////////////////////////////////////////////////
	new SharedFinfo(
		"tick", &TockWrapper::getTickConn,
		"tickIn, reinitIn" ),
};

const Cinfo TockWrapper::cinfo_(
	"Tock",
	"Upinder S. Bhalla, Nov 2005, NCBS",
	"Tock: Tock class. Simply reports arriving clock tick and reset events.",
	"Neutral",
	TockWrapper::fieldArray_,
	sizeof(TockWrapper::fieldArray_)/sizeof(Finfo *),
	&TockWrapper::create
);

///////////////////////////////////////////////////////
// Field function definitions
///////////////////////////////////////////////////////

///////////////////////////////////////////////////////
// Synapse function definitions
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
// Connection function definitions
///////////////////////////////////////////////////////
Element* tickConnLookup( const Conn* c )
{
	static const unsigned long OFFSET =
		FIELD_OFFSET ( TockWrapper, tickConn_ );
	return reinterpret_cast< TockWrapper* >( ( unsigned long )c - OFFSET );
}

