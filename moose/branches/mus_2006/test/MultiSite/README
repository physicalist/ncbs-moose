This directory does basic tests and illustrations of how to use the MultiSite
object.


Test Model description


Consider a MultiSite molecule MS. It has 3 sites, S1, S2 and S3.
Reaction rate does not depend on S1 at all.
We have basal rate for S2 and S3 both unbound
We have a high rate if S2 is empty and S3 is bound
We have a low rate if S2 is bound and S3 is in any state.


S1	S2	S3
 \	|      /
  \     |     /
   \    |    /
    V   V   V
    MultiSite
    f1  f2  f3	: Compute fraction of molecules in each state.
    -1  0   1	: State array. ----> Scale 1
    -1  1  -1   : State array. ----> Scale 2.

Suppose we have total MS = 3. [S1] = 1, [S2] = 1. [S3] = 2. Then,
	f1_1 = 1 (no effect). f2_1 = 1/3, f3_1 = 1/2
	Scale 0 = 1 * 2/3 * 1/2 = 1/3		// Default state.
	Scale 1 = 1 * 2/3 * 1/2 = 1/3		
	Scale 2 = 1 * 1/3 * 1   = 1/3

Let S2 = Ca binding
S3 = phosph

Old formulation:			New formulation:
         Ca			M_S2 + Ca <=======> Ca.M_S2
    M <======> Ca.M			
    ^            ^			X
    |            |		M_S3 ---------> M_S3*
    |            |
    |            |
    V      Ca    V
    M* <======>Ca.M*

From the list above,
State0 = M			State0 = S2 and S3 unbound
State1 = M*			State1 = S2 unbound, S3 bound
State2 = Ca.M, Ca.M*		State2 = S2 bound, S3 anything.


Test simulation: Modulate rate on distinct site S0 of M,
indicated by a ^ (caret, hat).

M----->M^		Rate 0, basal
M*---->M*^		Rate 1, high
Ca.M---->Ca.M^		Rate 2, low
Ca.M*---->Ca.M*^	Rate 2, low



Reference version: MultiSite_oldform.g

Command: genesis test_oldform.g 
Note: You need to rename the local kkit.g to something else to run this here.

Description:
It runs the MultiSite_oldform.g model generated by kkit. This is a simple
8-state model with 3 binding sites. Ca starts at 0, then 1 uM is added,
then another 1 uM is added. Each set runs for 100 sec to settle. Output is
dumped to file oldform.plot


Test version: MultiSite_newform.g

Command: moose test_newform.g
Note: You need to have the local kkit.g to run this here.

Description:
This loads in the 3-binding site model in MultiSite_newform.g. It then 
creates the MultiSite object and sets it up to do the same model as
the reference. However, it uses only the reactions involving the 3 binding 
sites. It dumps output to newform.plot


The MultiSite object as described here nearly works,
but the output is numerically slightly off, ~5%.

Analyzing: The discrepancy comes up even in the zero calcium case, so it is
easier to analyze. Here is how it goes.
           1
      M <-----> M*
      ^         ^
    1 |         | 2
      V         V
      M_<------>M*_
           1

The problem is that the introduction of the M*<--->M*_ reaction upsets the
symmetry. We cannot assume that M:M* == M_:M*_, which is the central
assumption in the whole MultiSite approach.

Possibly we can later improve on this. For now, we can at least say that the
formulation is complete enough to describe the system. That is what is needed
to begin to implement solvers for such multi-site systems.
