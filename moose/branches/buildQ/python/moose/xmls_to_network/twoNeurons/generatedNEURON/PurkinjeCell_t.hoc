
//  ******************************************************
//
//     File generated by: neuroConstruct v1.7.0
//
//     Generally replicates hoc for Cell Type as exported from
//     NEURON's Cell Builder, together with some neuroConstruct
//     specific helper/info procedures, e.g. toString(), netInfo()
//
//  ******************************************************


begintemplate PurkinjeCell_t

public init, topol, basic_shape, subsets, geom, memb
public synlist, x, y, z, position, connect2target


//  Some fields for referencing the cells

public reference, type, description, name
strdef reference, type, description, name


//  Some methods for referencing the cells

public toString, netInfo


//   Needed to match segment id to NEURON sections

public accessSectionForSegId
public getFractAlongSection

public all

objref synlist
objref all
objref stringFuncs

public soma_group
objref soma_group
public axon_group
objref axon_group
public dendrite_group
objref dendrite_group
public main_dends
objref main_dends

proc init() {
    topol()
    subsets()
    geom()
    biophys()
    geom_nseg()
    synlist = new List()
    x = y = z = 0
    reference = $s1
    type = $s2
    description = $s3
    
    strdef indexNum
    stringFuncs = new StringFunctions()
    stringFuncs.tail(reference, "_", indexNum)
    while (stringFuncs.substr( indexNum, "_")>=0) {
        stringFuncs.tail(indexNum, "_", indexNum)
    }
    
    sprint(name, "%s", type)
}

create Soma
public Soma
create AxonSec
public AxonSec
create AxonSec1
public AxonSec1
create AxonSec2
public AxonSec2
create DendRootSec
public DendRootSec
create DendSec1
public DendSec1
create DendSec2
public DendSec2
create DendSec3
public DendSec3
create Dend_4_Sec
public Dend_4_Sec
create Dend_5_Sec
public Dend_5_Sec
create Dend_6_Sec
public Dend_6_Sec
create Dend_7_Sec
public Dend_7_Sec
create Dend_8_Sec
public Dend_8_Sec
create Dend_9_Sec
public Dend_9_Sec
create Dend_10_Sec
public Dend_10_Sec
create Dend_11_Sec
public Dend_11_Sec
create Dend_12_Sec
public Dend_12_Sec
create Dend_13_Sec
public Dend_13_Sec
create Dend_14_Sec
public Dend_14_Sec
create Dend_15_Sec
public Dend_15_Sec
create Dend_16_Sec
public Dend_16_Sec
create Dend_17_Sec
public Dend_17_Sec
create Dend_18_Sec
public Dend_18_Sec
create Dend_19_Sec
public Dend_19_Sec
create Dend_20_Sec
public Dend_20_Sec
create Dend_21_Sec
public Dend_21_Sec
create Dend_22_Sec
public Dend_22_Sec
create Dend_23_Sec
public Dend_23_Sec
create Dend_24_Sec
public Dend_24_Sec
create Dend_25_Sec
public Dend_25_Sec
create Dend_26_Sec
public Dend_26_Sec
create Dend_27_Sec
public Dend_27_Sec
create Dend_28_Sec
public Dend_28_Sec
create Dend_29_Sec
public Dend_29_Sec
create Dend_30_Sec
public Dend_30_Sec
create Dend_31_Sec
public Dend_31_Sec
create Dend_32_Sec
public Dend_32_Sec
create Dend_33_Sec
public Dend_33_Sec
create Dend_34_Sec
public Dend_34_Sec
create Dend_35_Sec
public Dend_35_Sec
create Dend_36_Sec
public Dend_36_Sec
create Dend_37_Sec
public Dend_37_Sec
create Dend_38_Sec
public Dend_38_Sec
create Dend_39_Sec
public Dend_39_Sec

proc topol() {
    connect AxonSec(0), Soma(0.5)
    connect AxonSec1(0), AxonSec(1.0)
    connect AxonSec2(0), AxonSec(1.0)
    connect DendRootSec(0), Soma(0.5)
    connect DendSec1(0), DendRootSec(1.0)
    connect DendSec2(0), DendRootSec(1.0)
    connect DendSec3(0), DendRootSec(1.0)
    connect Dend_4_Sec(0), DendSec1(1.0)
    connect Dend_5_Sec(0), DendSec1(1.0)
    connect Dend_6_Sec(0), DendSec1(1.0)
    connect Dend_7_Sec(0), DendSec2(1.0)
    connect Dend_8_Sec(0), DendSec2(1.0)
    connect Dend_9_Sec(0), DendSec2(1.0)
    connect Dend_10_Sec(0), DendSec3(1.0)
    connect Dend_11_Sec(0), DendSec3(1.0)
    connect Dend_12_Sec(0), DendSec3(1.0)
    connect Dend_13_Sec(0), Dend_4_Sec(1.0)
    connect Dend_14_Sec(0), Dend_4_Sec(1.0)
    connect Dend_15_Sec(0), Dend_4_Sec(1.0)
    connect Dend_16_Sec(0), Dend_5_Sec(1.0)
    connect Dend_17_Sec(0), Dend_5_Sec(1.0)
    connect Dend_18_Sec(0), Dend_5_Sec(1.0)
    connect Dend_19_Sec(0), Dend_6_Sec(1.0)
    connect Dend_20_Sec(0), Dend_6_Sec(1.0)
    connect Dend_21_Sec(0), Dend_6_Sec(1.0)
    connect Dend_22_Sec(0), Dend_7_Sec(1.0)
    connect Dend_23_Sec(0), Dend_7_Sec(1.0)
    connect Dend_24_Sec(0), Dend_7_Sec(1.0)
    connect Dend_25_Sec(0), Dend_8_Sec(1.0)
    connect Dend_26_Sec(0), Dend_8_Sec(1.0)
    connect Dend_27_Sec(0), Dend_8_Sec(1.0)
    connect Dend_28_Sec(0), Dend_9_Sec(1.0)
    connect Dend_29_Sec(0), Dend_9_Sec(1.0)
    connect Dend_30_Sec(0), Dend_9_Sec(1.0)
    connect Dend_31_Sec(0), Dend_10_Sec(1.0)
    connect Dend_32_Sec(0), Dend_10_Sec(1.0)
    connect Dend_33_Sec(0), Dend_10_Sec(1.0)
    connect Dend_34_Sec(0), Dend_11_Sec(1.0)
    connect Dend_35_Sec(0), Dend_11_Sec(1.0)
    connect Dend_36_Sec(0), Dend_11_Sec(1.0)
    connect Dend_37_Sec(0), Dend_12_Sec(1.0)
    connect Dend_38_Sec(0), Dend_12_Sec(1.0)
    connect Dend_39_Sec(0), Dend_12_Sec(1.0)
    basic_shape()
}

proc basic_shape() {

//  Looking at segment number 0: Soma, section: Soma, SPHERICAL, ID: 0, ROOT SEGMENT, rad: 15.0, (0.0, 0.0, 0.0) -> (0.0, 0.0, 0.0) (FINITE VOLUME)
    Soma {pt3dclear() pt3dadd(0.0, -15.0, 0.0, 30.0) pt3dadd(0.0, 15.0, 0.0, 30.0)}

//  Looking at segment number 1: mainAxon, section: AxonSec, ID: 1, parent: Soma (0), FRACT ALONG: 0.5, rad: 1.0, (0.0, 0.0, 0.0) -> (0.0, -240.0, 0.0), len: 240
    AxonSec {pt3dclear() pt3dadd(0.0, 0.0, 0.0, 2.0) pt3dadd(0.0, -240.0, 0.0, 2.0)}

//  Looking at segment number 2: axon1, section: AxonSec1, ID: 2, parent: mainAxon (1), rad: 1.0, (0.0, -240.0, 0.0) -> (-5.0, -260.0, 0.0), len: 20.6155
    AxonSec1 {pt3dclear() pt3dadd(0.0, -240.0, 0.0, 2.0) pt3dadd(-5.0, -260.0, 0.0, 2.0)}

//  Looking at segment number 3: axon2, section: AxonSec2, ID: 3, parent: mainAxon (1), rad: 1.0, (0.0, -240.0, 0.0) -> (5.0, -260.0, 0.0), len: 20.6155
    AxonSec2 {pt3dclear() pt3dadd(0.0, -240.0, 0.0, 2.0) pt3dadd(5.0, -260.0, 0.0, 2.0)}

//  Looking at segment number 4: root, section: DendRootSec, ID: 4, parent: Soma (0), FRACT ALONG: 0.5, rad: 1.5, (0.0, 0.0, 0.0) -> (0.0, 30.0, 0.0), len: 30
    DendRootSec {pt3dclear() pt3dadd(0.0, 0.0, 0.0, 3.0) pt3dadd(0.0, 30.0, 0.0, 3.0)}

//  Looking at segment number 5: mainDend1, section: DendSec1, ID: 5, parent: root (4), rad: 1.5, (0.0, 30.0, 0.0) -> (0.0, 50.0, 0.0), len: 20
    DendSec1 {pt3dclear() pt3dadd(0.0, 30.0, 0.0, 3.0) pt3dadd(0.0, 50.0, 0.0, 3.0)}

//  Looking at segment number 6: mainDend2, section: DendSec2, ID: 6, parent: root (4), rad: 1.5, (0.0, 30.0, 0.0) -> (0.0, 50.0, -40.0), len: 44.7214
    DendSec2 {pt3dclear() pt3dadd(0.0, 30.0, 0.0, 3.0) pt3dadd(0.0, 50.0, -40.0, 3.0)}

//  Looking at segment number 7: mainDend3, section: DendSec3, ID: 7, parent: root (4), rad: 1.5, (0.0, 30.0, 0.0) -> (0.0, 50.0, 40.0), len: 44.7214
    DendSec3 {pt3dclear() pt3dadd(0.0, 30.0, 0.0, 3.0) pt3dadd(0.0, 50.0, 40.0, 3.0)}

//  Looking at segment number 8: Dend_4, section: Dend_4_Sec, ID: 8, parent: mainDend1 (5), rad: 0.90000004, (0.0, 50.0, 0.0) -> (0.0, 80.0, -10.0), len: 31.6228
    Dend_4_Sec {pt3dclear() pt3dadd(0.0, 50.0, 0.0, 3.0) pt3dadd(0.0, 80.0, -10.0, 1.8000001)}

//  Looking at segment number 9: Dend_5, section: Dend_5_Sec, ID: 9, parent: mainDend1 (5), rad: 0.90000004, (0.0, 50.0, 0.0) -> (0.0, 80.0, 10.0), len: 31.6228
    Dend_5_Sec {pt3dclear() pt3dadd(0.0, 50.0, 0.0, 3.0) pt3dadd(0.0, 80.0, 10.0, 1.8000001)}

//  Looking at segment number 10: Dend_6, section: Dend_6_Sec, ID: 10, parent: mainDend1 (5), rad: 0.90000004, (0.0, 50.0, 0.0) -> (0.0, 85.0, 0.0), len: 35
    Dend_6_Sec {pt3dclear() pt3dadd(0.0, 50.0, 0.0, 3.0) pt3dadd(0.0, 85.0, 0.0, 1.8000001)}

//  Looking at segment number 11: Dend_7, section: Dend_7_Sec, ID: 11, parent: mainDend2 (6), rad: 0.90000004, (0.0, 50.0, -40.0) -> (0.0, 70.0, -50.0), len: 22.3607
    Dend_7_Sec {pt3dclear() pt3dadd(0.0, 50.0, -40.0, 3.0) pt3dadd(0.0, 70.0, -50.0, 1.8000001)}

//  Looking at segment number 12: Dend_8, section: Dend_8_Sec, ID: 12, parent: mainDend2 (6), rad: 0.90000004, (0.0, 50.0, -40.0) -> (0.0, 70.0, -30.0), len: 22.3607
    Dend_8_Sec {pt3dclear() pt3dadd(0.0, 50.0, -40.0, 3.0) pt3dadd(0.0, 70.0, -30.0, 1.8000001)}

//  Looking at segment number 13: Dend_9, section: Dend_9_Sec, ID: 13, parent: mainDend2 (6), rad: 0.90000004, (0.0, 50.0, -40.0) -> (0.0, 75.0, -40.0), len: 25
    Dend_9_Sec {pt3dclear() pt3dadd(0.0, 50.0, -40.0, 3.0) pt3dadd(0.0, 75.0, -40.0, 1.8000001)}

//  Looking at segment number 14: Dend_10, section: Dend_10_Sec, ID: 14, parent: mainDend3 (7), rad: 0.90000004, (0.0, 50.0, 40.0) -> (0.0, 70.0, 30.0), len: 22.3607
    Dend_10_Sec {pt3dclear() pt3dadd(0.0, 50.0, 40.0, 3.0) pt3dadd(0.0, 70.0, 30.0, 1.8000001)}

//  Looking at segment number 15: Dend_11, section: Dend_11_Sec, ID: 15, parent: mainDend3 (7), rad: 0.90000004, (0.0, 50.0, 40.0) -> (0.0, 70.0, 50.0), len: 22.3607
    Dend_11_Sec {pt3dclear() pt3dadd(0.0, 50.0, 40.0, 3.0) pt3dadd(0.0, 70.0, 50.0, 1.8000001)}

//  Looking at segment number 16: Dend_12, section: Dend_12_Sec, ID: 16, parent: mainDend3 (7), rad: 0.90000004, (0.0, 50.0, 40.0) -> (0.0, 75.0, 40.0), len: 25
    Dend_12_Sec {pt3dclear() pt3dadd(0.0, 50.0, 40.0, 3.0) pt3dadd(0.0, 75.0, 40.0, 1.8000001)}

//  Looking at segment number 17: Dend_13, section: Dend_13_Sec, ID: 17, parent: Dend_4 (8), rad: 0.54, (0.0, 80.0, -10.0) -> (5.0, 130.0, -24.0), len: 52.1632
    Dend_13_Sec {pt3dclear() pt3dadd(0.0, 80.0, -10.0, 1.8000001) pt3dadd(5.0, 130.0, -24.0, 1.08)}

//  Looking at segment number 18: Dend_14, section: Dend_14_Sec, ID: 18, parent: Dend_4 (8), rad: 0.54, (0.0, 80.0, -10.0) -> (0.0, 130.0, -10.0), len: 50
    Dend_14_Sec {pt3dclear() pt3dadd(0.0, 80.0, -10.0, 1.8000001) pt3dadd(0.0, 130.0, -10.0, 1.08)}

//  Looking at segment number 19: Dend_15, section: Dend_15_Sec, ID: 19, parent: Dend_4 (8), rad: 0.54, (0.0, 80.0, -10.0) -> (-5.0, 130.0, 4.0), len: 52.1632
    Dend_15_Sec {pt3dclear() pt3dadd(0.0, 80.0, -10.0, 1.8000001) pt3dadd(-5.0, 130.0, 4.0, 1.08)}

//  Looking at segment number 20: Dend_16, section: Dend_16_Sec, ID: 20, parent: Dend_5 (9), rad: 0.54, (0.0, 80.0, 10.0) -> (5.0, 130.0, -4.0), len: 52.1632
    Dend_16_Sec {pt3dclear() pt3dadd(0.0, 80.0, 10.0, 1.8000001) pt3dadd(5.0, 130.0, -4.0, 1.08)}

//  Looking at segment number 21: Dend_17, section: Dend_17_Sec, ID: 21, parent: Dend_5 (9), rad: 0.54, (0.0, 80.0, 10.0) -> (0.0, 130.0, 10.0), len: 50
    Dend_17_Sec {pt3dclear() pt3dadd(0.0, 80.0, 10.0, 1.8000001) pt3dadd(0.0, 130.0, 10.0, 1.08)}

//  Looking at segment number 22: Dend_18, section: Dend_18_Sec, ID: 22, parent: Dend_5 (9), rad: 0.54, (0.0, 80.0, 10.0) -> (-5.0, 130.0, 24.0), len: 52.1632
    Dend_18_Sec {pt3dclear() pt3dadd(0.0, 80.0, 10.0, 1.8000001) pt3dadd(-5.0, 130.0, 24.0, 1.08)}

//  Looking at segment number 23: Dend_19, section: Dend_19_Sec, ID: 23, parent: Dend_6 (10), rad: 0.54, (0.0, 85.0, 0.0) -> (5.0, 135.0, -14.0), len: 52.1632
    Dend_19_Sec {pt3dclear() pt3dadd(0.0, 85.0, 0.0, 1.8000001) pt3dadd(5.0, 135.0, -14.0, 1.08)}

//  Looking at segment number 24: Dend_20, section: Dend_20_Sec, ID: 24, parent: Dend_6 (10), rad: 0.54, (0.0, 85.0, 0.0) -> (0.0, 135.0, 0.0), len: 50
    Dend_20_Sec {pt3dclear() pt3dadd(0.0, 85.0, 0.0, 1.8000001) pt3dadd(0.0, 135.0, 0.0, 1.08)}

//  Looking at segment number 25: Dend_21, section: Dend_21_Sec, ID: 25, parent: Dend_6 (10), rad: 0.54, (0.0, 85.0, 0.0) -> (-5.0, 135.0, 14.0), len: 52.1632
    Dend_21_Sec {pt3dclear() pt3dadd(0.0, 85.0, 0.0, 1.8000001) pt3dadd(-5.0, 135.0, 14.0, 1.08)}

//  Looking at segment number 26: Dend_22, section: Dend_22_Sec, ID: 26, parent: Dend_7 (11), rad: 0.54, (0.0, 70.0, -50.0) -> (5.0, 120.0, -64.0), len: 52.1632
    Dend_22_Sec {pt3dclear() pt3dadd(0.0, 70.0, -50.0, 1.8000001) pt3dadd(5.0, 120.0, -64.0, 1.08)}

//  Looking at segment number 27: Dend_23, section: Dend_23_Sec, ID: 27, parent: Dend_7 (11), rad: 0.54, (0.0, 70.0, -50.0) -> (0.0, 120.0, -50.0), len: 50
    Dend_23_Sec {pt3dclear() pt3dadd(0.0, 70.0, -50.0, 1.8000001) pt3dadd(0.0, 120.0, -50.0, 1.08)}

//  Looking at segment number 28: Dend_24, section: Dend_24_Sec, ID: 28, parent: Dend_7 (11), rad: 0.54, (0.0, 70.0, -50.0) -> (-5.0, 120.0, -36.0), len: 52.1632
    Dend_24_Sec {pt3dclear() pt3dadd(0.0, 70.0, -50.0, 1.8000001) pt3dadd(-5.0, 120.0, -36.0, 1.08)}

//  Looking at segment number 29: Dend_25, section: Dend_25_Sec, ID: 29, parent: Dend_8 (12), rad: 0.54, (0.0, 70.0, -30.0) -> (5.0, 120.0, -44.0), len: 52.1632
    Dend_25_Sec {pt3dclear() pt3dadd(0.0, 70.0, -30.0, 1.8000001) pt3dadd(5.0, 120.0, -44.0, 1.08)}

//  Looking at segment number 30: Dend_26, section: Dend_26_Sec, ID: 30, parent: Dend_8 (12), rad: 0.54, (0.0, 70.0, -30.0) -> (0.0, 120.0, -30.0), len: 50
    Dend_26_Sec {pt3dclear() pt3dadd(0.0, 70.0, -30.0, 1.8000001) pt3dadd(0.0, 120.0, -30.0, 1.08)}

//  Looking at segment number 31: Dend_27, section: Dend_27_Sec, ID: 31, parent: Dend_8 (12), rad: 0.54, (0.0, 70.0, -30.0) -> (-5.0, 120.0, -16.0), len: 52.1632
    Dend_27_Sec {pt3dclear() pt3dadd(0.0, 70.0, -30.0, 1.8000001) pt3dadd(-5.0, 120.0, -16.0, 1.08)}

//  Looking at segment number 32: Dend_28, section: Dend_28_Sec, ID: 32, parent: Dend_9 (13), rad: 0.54, (0.0, 75.0, -40.0) -> (5.0, 125.0, -54.0), len: 52.1632
    Dend_28_Sec {pt3dclear() pt3dadd(0.0, 75.0, -40.0, 1.8000001) pt3dadd(5.0, 125.0, -54.0, 1.08)}

//  Looking at segment number 33: Dend_29, section: Dend_29_Sec, ID: 33, parent: Dend_9 (13), rad: 0.54, (0.0, 75.0, -40.0) -> (0.0, 125.0, -40.0), len: 50
    Dend_29_Sec {pt3dclear() pt3dadd(0.0, 75.0, -40.0, 1.8000001) pt3dadd(0.0, 125.0, -40.0, 1.08)}

//  Looking at segment number 34: Dend_30, section: Dend_30_Sec, ID: 34, parent: Dend_9 (13), rad: 0.54, (0.0, 75.0, -40.0) -> (-5.0, 125.0, -26.0), len: 52.1632
    Dend_30_Sec {pt3dclear() pt3dadd(0.0, 75.0, -40.0, 1.8000001) pt3dadd(-5.0, 125.0, -26.0, 1.08)}

//  Looking at segment number 35: Dend_31, section: Dend_31_Sec, ID: 35, parent: Dend_10 (14), rad: 0.54, (0.0, 70.0, 30.0) -> (5.0, 120.0, 16.0), len: 52.1632
    Dend_31_Sec {pt3dclear() pt3dadd(0.0, 70.0, 30.0, 1.8000001) pt3dadd(5.0, 120.0, 16.0, 1.08)}

//  Looking at segment number 36: Dend_32, section: Dend_32_Sec, ID: 36, parent: Dend_10 (14), rad: 0.54, (0.0, 70.0, 30.0) -> (0.0, 120.0, 30.0), len: 50
    Dend_32_Sec {pt3dclear() pt3dadd(0.0, 70.0, 30.0, 1.8000001) pt3dadd(0.0, 120.0, 30.0, 1.08)}

//  Looking at segment number 37: Dend_33, section: Dend_33_Sec, ID: 37, parent: Dend_10 (14), rad: 0.54, (0.0, 70.0, 30.0) -> (-5.0, 120.0, 44.0), len: 52.1632
    Dend_33_Sec {pt3dclear() pt3dadd(0.0, 70.0, 30.0, 1.8000001) pt3dadd(-5.0, 120.0, 44.0, 1.08)}

//  Looking at segment number 38: Dend_34, section: Dend_34_Sec, ID: 38, parent: Dend_11 (15), rad: 0.54, (0.0, 70.0, 50.0) -> (5.0, 120.0, 36.0), len: 52.1632
    Dend_34_Sec {pt3dclear() pt3dadd(0.0, 70.0, 50.0, 1.8000001) pt3dadd(5.0, 120.0, 36.0, 1.08)}

//  Looking at segment number 39: Dend_35, section: Dend_35_Sec, ID: 39, parent: Dend_11 (15), rad: 0.54, (0.0, 70.0, 50.0) -> (0.0, 120.0, 50.0), len: 50
    Dend_35_Sec {pt3dclear() pt3dadd(0.0, 70.0, 50.0, 1.8000001) pt3dadd(0.0, 120.0, 50.0, 1.08)}

//  Looking at segment number 40: Dend_36, section: Dend_36_Sec, ID: 40, parent: Dend_11 (15), rad: 0.54, (0.0, 70.0, 50.0) -> (-5.0, 120.0, 64.0), len: 52.1632
    Dend_36_Sec {pt3dclear() pt3dadd(0.0, 70.0, 50.0, 1.8000001) pt3dadd(-5.0, 120.0, 64.0, 1.08)}

//  Looking at segment number 41: Dend_37, section: Dend_37_Sec, ID: 41, parent: Dend_12 (16), rad: 0.54, (0.0, 75.0, 40.0) -> (5.0, 125.0, 26.0), len: 52.1632
    Dend_37_Sec {pt3dclear() pt3dadd(0.0, 75.0, 40.0, 1.8000001) pt3dadd(5.0, 125.0, 26.0, 1.08)}

//  Looking at segment number 42: Dend_38, section: Dend_38_Sec, ID: 42, parent: Dend_12 (16), rad: 0.54, (0.0, 75.0, 40.0) -> (0.0, 125.0, 40.0), len: 50
    Dend_38_Sec {pt3dclear() pt3dadd(0.0, 75.0, 40.0, 1.8000001) pt3dadd(0.0, 125.0, 40.0, 1.08)}

//  Looking at segment number 43: Dend_39, section: Dend_39_Sec, ID: 43, parent: Dend_12 (16), rad: 0.54, (0.0, 75.0, 40.0) -> (-5.0, 125.0, 54.0), len: 52.1632
    Dend_39_Sec {pt3dclear() pt3dadd(0.0, 75.0, 40.0, 1.8000001) pt3dadd(-5.0, 125.0, 54.0, 1.08)}
}

proc subsets() { local i


//  The group all is assumed never to change
    all = new SectionList()
subsets_extra_0()
subsets_extra_1()
}

proc subsets_extra_0(){


    soma_group = new SectionList()

    Soma soma_group.append()


    axon_group = new SectionList()

    AxonSec axon_group.append()
    AxonSec1 axon_group.append()
    AxonSec2 axon_group.append()


    dendrite_group = new SectionList()

    DendRootSec dendrite_group.append()
    DendSec1 dendrite_group.append()
    DendSec2 dendrite_group.append()
    DendSec3 dendrite_group.append()
    Dend_4_Sec dendrite_group.append()
    Dend_5_Sec dendrite_group.append()
    Dend_6_Sec dendrite_group.append()
    Dend_7_Sec dendrite_group.append()
    Dend_8_Sec dendrite_group.append()
    Dend_9_Sec dendrite_group.append()
    Dend_10_Sec dendrite_group.append()
    Dend_11_Sec dendrite_group.append()
    Dend_12_Sec dendrite_group.append()
    Dend_13_Sec dendrite_group.append()
    Dend_14_Sec dendrite_group.append()
    Dend_15_Sec dendrite_group.append()
    Dend_16_Sec dendrite_group.append()
    Dend_17_Sec dendrite_group.append()
    Dend_18_Sec dendrite_group.append()
    Dend_19_Sec dendrite_group.append()
    Dend_20_Sec dendrite_group.append()
    Dend_21_Sec dendrite_group.append()
    Dend_22_Sec dendrite_group.append()
    Dend_23_Sec dendrite_group.append()
    Dend_24_Sec dendrite_group.append()
    Dend_25_Sec dendrite_group.append()
    Dend_26_Sec dendrite_group.append()
    Dend_27_Sec dendrite_group.append()
    Dend_28_Sec dendrite_group.append()
    Dend_29_Sec dendrite_group.append()
    Dend_30_Sec dendrite_group.append()
    Dend_31_Sec dendrite_group.append()
    Dend_32_Sec dendrite_group.append()
    Dend_33_Sec dendrite_group.append()
    Dend_34_Sec dendrite_group.append()
    Dend_35_Sec dendrite_group.append()
    Dend_36_Sec dendrite_group.append()
    Dend_37_Sec dendrite_group.append()
    Dend_38_Sec dendrite_group.append()
    Dend_39_Sec dendrite_group.append()


    main_dends = new SectionList()

    Dend_13_Sec main_dends.append()
    Dend_14_Sec main_dends.append()
    Dend_15_Sec main_dends.append()
    Dend_16_Sec main_dends.append()
    Dend_17_Sec main_dends.append()
    Dend_18_Sec main_dends.append()
    Dend_19_Sec main_dends.append()
    Dend_20_Sec main_dends.append()
    Dend_21_Sec main_dends.append()
    Dend_22_Sec main_dends.append()
    Dend_23_Sec main_dends.append()
    Dend_24_Sec main_dends.append()
    Dend_25_Sec main_dends.append()
    Dend_26_Sec main_dends.append()
    Dend_27_Sec main_dends.append()
    Dend_28_Sec main_dends.append()
    Dend_29_Sec main_dends.append()
    Dend_30_Sec main_dends.append()
    Dend_31_Sec main_dends.append()
    Dend_32_Sec main_dends.append()
    Dend_33_Sec main_dends.append()
    Dend_34_Sec main_dends.append()
    Dend_35_Sec main_dends.append()
    Dend_36_Sec main_dends.append()
    Dend_37_Sec main_dends.append()
    Dend_38_Sec main_dends.append()
    Dend_39_Sec main_dends.append()


    Soma all.append()
    AxonSec all.append()
    AxonSec1 all.append()
    AxonSec2 all.append()
    DendRootSec all.append()
    DendSec1 all.append()
    DendSec2 all.append()
    DendSec3 all.append()
    Dend_4_Sec all.append()
    Dend_5_Sec all.append()
    Dend_6_Sec all.append()
    Dend_7_Sec all.append()
    Dend_8_Sec all.append()
    Dend_9_Sec all.append()
    Dend_10_Sec all.append()
    Dend_11_Sec all.append()
    Dend_12_Sec all.append()
    Dend_13_Sec all.append()
    Dend_14_Sec all.append()
    Dend_15_Sec all.append()
}

proc subsets_extra_1(){
    Dend_16_Sec all.append()
    Dend_17_Sec all.append()
    Dend_18_Sec all.append()
    Dend_19_Sec all.append()
    Dend_20_Sec all.append()
    Dend_21_Sec all.append()
    Dend_22_Sec all.append()
    Dend_23_Sec all.append()
    Dend_24_Sec all.append()
    Dend_25_Sec all.append()
    Dend_26_Sec all.append()
    Dend_27_Sec all.append()
    Dend_28_Sec all.append()
    Dend_29_Sec all.append()
    Dend_30_Sec all.append()
    Dend_31_Sec all.append()
    Dend_32_Sec all.append()
    Dend_33_Sec all.append()
    Dend_34_Sec all.append()
    Dend_35_Sec all.append()
    Dend_36_Sec all.append()
    Dend_37_Sec all.append()
    Dend_38_Sec all.append()
    Dend_39_Sec all.append()
}

proc geom() {
}

proc biophys() {
    forsec all cm = 1.0
    forsec all Ra = 30.0

}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1

}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


//  Accessing the section which corresponds to the given segment id

proc accessSectionForSegId() {   

    id = $1
    if (id == 0)  { access Soma }
    if (id == 1)  { access AxonSec }
    if (id == 2)  { access AxonSec1 }
    if (id == 3)  { access AxonSec2 }
    if (id == 4)  { access DendRootSec }
    if (id == 5)  { access DendSec1 }
    if (id == 6)  { access DendSec2 }
    if (id == 7)  { access DendSec3 }
    if (id == 8)  { access Dend_4_Sec }
    if (id == 9)  { access Dend_5_Sec }
    if (id == 10)  { access Dend_6_Sec }
    if (id == 11)  { access Dend_7_Sec }
    if (id == 12)  { access Dend_8_Sec }
    if (id == 13)  { access Dend_9_Sec }
    if (id == 14)  { access Dend_10_Sec }
    if (id == 15)  { access Dend_11_Sec }
    if (id == 16)  { access Dend_12_Sec }
    if (id == 17)  { access Dend_13_Sec }
    if (id == 18)  { access Dend_14_Sec }
    if (id == 19)  { access Dend_15_Sec }
    if (id == 20)  { access Dend_16_Sec }
    if (id == 21)  { access Dend_17_Sec }
    if (id == 22)  { access Dend_18_Sec }
    if (id == 23)  { access Dend_19_Sec }
    if (id == 24)  { access Dend_20_Sec }
    if (id == 25)  { access Dend_21_Sec }
    if (id == 26)  { access Dend_22_Sec }
    if (id == 27)  { access Dend_23_Sec }
    if (id == 28)  { access Dend_24_Sec }
    if (id == 29)  { access Dend_25_Sec }
    if (id == 30)  { access Dend_26_Sec }
    if (id == 31)  { access Dend_27_Sec }
    if (id == 32)  { access Dend_28_Sec }
    if (id == 33)  { access Dend_29_Sec }
    if (id == 34)  { access Dend_30_Sec }
    if (id == 35)  { access Dend_31_Sec }
    if (id == 36)  { access Dend_32_Sec }
    if (id == 37)  { access Dend_33_Sec }
    if (id == 38)  { access Dend_34_Sec }
    if (id == 39)  { access Dend_35_Sec }
    if (id == 40)  { access Dend_36_Sec }
    if (id == 41)  { access Dend_37_Sec }
    if (id == 42)  { access Dend_38_Sec }
    if (id == 43)  { access Dend_39_Sec }
}


//  For getting the fraction along the NEURON section, given the fraction
//  along the segment who's id is given
//  NOTE:This function will produce incorrect results if the morphology of the cell is altered after initialisation
//  TODO: alter to use pt3d info direct from section, getting lengths from those... (may be slower)

func getFractAlongSection() {   

    fractionAlongSegment = $1
    id = $2
    // Section Soma has 1 segment
    if (id == 0)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section AxonSec has 1 segment
    if (id == 1)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section AxonSec1 has 1 segment
    if (id == 2)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section AxonSec2 has 1 segment
    if (id == 3)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section DendRootSec has 1 segment
    if (id == 4)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section DendSec1 has 1 segment
    if (id == 5)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section DendSec2 has 1 segment
    if (id == 6)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section DendSec3 has 1 segment
    if (id == 7)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_4_Sec has 1 segment
    if (id == 8)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_5_Sec has 1 segment
    if (id == 9)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_6_Sec has 1 segment
    if (id == 10)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_7_Sec has 1 segment
    if (id == 11)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_8_Sec has 1 segment
    if (id == 12)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_9_Sec has 1 segment
    if (id == 13)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_10_Sec has 1 segment
    if (id == 14)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_11_Sec has 1 segment
    if (id == 15)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_12_Sec has 1 segment
    if (id == 16)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_13_Sec has 1 segment
    if (id == 17)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_14_Sec has 1 segment
    if (id == 18)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_15_Sec has 1 segment
    if (id == 19)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_16_Sec has 1 segment
    if (id == 20)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_17_Sec has 1 segment
    if (id == 21)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_18_Sec has 1 segment
    if (id == 22)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_19_Sec has 1 segment
    if (id == 23)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_20_Sec has 1 segment
    if (id == 24)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_21_Sec has 1 segment
    if (id == 25)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_22_Sec has 1 segment
    if (id == 26)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_23_Sec has 1 segment
    if (id == 27)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_24_Sec has 1 segment
    if (id == 28)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_25_Sec has 1 segment
    if (id == 29)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_26_Sec has 1 segment
    if (id == 30)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_27_Sec has 1 segment
    if (id == 31)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_28_Sec has 1 segment
    if (id == 32)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_29_Sec has 1 segment
    if (id == 33)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_30_Sec has 1 segment
    if (id == 34)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_31_Sec has 1 segment
    if (id == 35)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_32_Sec has 1 segment
    if (id == 36)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_33_Sec has 1 segment
    if (id == 37)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_34_Sec has 1 segment
    if (id == 38)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_35_Sec has 1 segment
    if (id == 39)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_36_Sec has 1 segment
    if (id == 40)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_37_Sec has 1 segment
    if (id == 41)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_38_Sec has 1 segment
    if (id == 42)  {return fractionAlongSegment} // one seg in sec, so return immediately
    // Section Dend_39_Sec has 1 segment
    if (id == 43)  {return fractionAlongSegment} // one seg in sec, so return immediately

    return fractionAlongSegment // assumes id not found, i.e. a one segment section...
}

proc connect2target() {   //$o1 target point process, $o2 returned NetCon


//  Using standard NetBuilder form. (Overly) simple assumption that first soma seg is trigger for AP...
//  Note: neuroConstruct does not use this func for creating connections (in serial mode!), but it can be useful when using generated files in NEURON's NetBuilder

    Soma $o2 = new NetCon(&v(1), $o1)
    print "connect2target called on ", name
}


//  This function is useful when checking what cells (aot sections) have been created. Run allcells() from nCtools.hoc...

proc toString() {
    strdef info
    sprint(info, "Cell ref: %s (%s), at: (%d, %d, %d)", reference, name, x, y, z)
    print info
}


//  This function is useful when checking network connections

proc netInfo() {
    strdef info
    sprint(info, "Cell reference: %s, type: %s", reference, type)
    print "--------  ",info
    print "    There are ", synlist.count(), " connections in ", synlist
    for i=0,synlist.count()-1 {
        print "        Connection from ", synlist.o[i].precell, " to: ", synlist.o[i].postcell
        print "        Pre:   Weight: ", synlist.o[i].weight, ", delay: ", synlist.o[i].delay, ", threshold: ", synlist.o[i].threshold 
        print "        Post:  ", synlist.o[i].syn(), ", gmax: ", synlist.o[i].syn().gmax , ", e: ", synlist.o[i].syn().e , ", rise time: ", synlist.o[i].syn().tau_rise , ", decay time: ", synlist.o[i].syn().tau_decay 
    print " "
    }
    
    
    
    print "--------  "
    print " "
}


endtemplate PurkinjeCell_t

