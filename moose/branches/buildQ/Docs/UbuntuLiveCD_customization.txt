Instructions by Aditya Gilra to use Ubuntu Customization Kit to make MOOSE liveDVDs / liveUSBs:
Dt: 2012 Jul 09

Customization of Ubuntu liveCD (liveDVD also) / liveUSB:
Not sure if you need to be running the same version of Ubuntu as the liveCD you're customizing?
But 32-bit can be customized on 64-bit linux, not vice-versa.

Install Ubuntu Customization Kit 2.4.5 via synaptic. 5GB free space needed to customize a live CD.

2.4.5 has a bug (resolv.conf copying issues) and synaptic does not have the latest 2.4.7 by default.
So:
sudo nano /usr/lib/uck/remaster-live-cd.sh
change around line 356:
 cp -f /etc/resolv.conf "$REMASTER_DIR/etc/resolv.conf" || 
to
 cp -f --remove-destination /etc/resolv.conf "$REMASTER_DIR/etc/resolv.conf" ||

Now run mainmenu -> system tools -> UCK, select the default downloaded ubuntu iso,
 set the settings (use manual configuration) and system will be ready.
 Choose all three desktops: KDE, GNOME and other.
 Choose hybrid iso to make both liveCD/DVD and liveUSB
You need an internet connection, as uck updates after setting up the file structure.
Then it asks to select package manager / console application.
Double click the choices to execute; selecting the choice and pressing ok will exit from UCK!!!
package manager says none found, since synaptic not present by default on 12.04!
use console application to install packages (by default you're logged in as root).

From the console: nano /etc/apt/sources.list and add these lines:
deb http://archive.ubuntu.com/ubuntu/ precise universe
deb http://archive.ubuntu.com/ubuntu/ precise multiverse
Run "gnome-control-center network" to set system proxy (sets env variable http_proxy). Set it at the end to what it'll be where the live USB/DVD is finally used.
Reload/update package list! apt-get update (different from apt-get upgrade.)
Now run 'software-center'. Install synaptic from software-center; OR 'apt-get install synaptic'.
Below packages can also be installed via synaptic / software-center.
You can even exit from the console and double-click package manager -- will work now that synaptic is installed.
(You may also need to set synaptic proxy, but don't forget to set them before exiting to what they'll be where the liveUSB/DVD is used.)

Dependencies for moose:
Always first apt-get update (to get latest list of packages), then install/upgrade.
apt-get install g++ swig subversion libgsl0-dev python-dev python-numpy
(./configure, make and sudo make install : libSBML from sourceforge for 'make use_libSBML=1'; off by default.
requires libxml2 and libxml2-dev via apt-get / synaptic.)
for the gui:
apt-get install python-qt4
apt-get install python-qt4-gl python-pygraphviz python-matplotlib
(these require universe/multiverse repositories enabled, see above.)

Adding user below retains that user in the liveCD and that user comes up as the default user in the liveCD.
'adduser moose' (added /home/moose), but there exists a /home/<yourloginname> too like /home/aditya for me,
but this will not show on the liveCD, so don't worry.
You need to cd /home/moose. BTW, changes to .subversion/servers in /home/aditya reflected in .subversion/servers in /home/moose!!!
Now give superuser priviledges to 'moose' user. run 'visudo' and below the line:
root    ALL=(ALL:ALL) ALL
add this line:
moose   ALL=(ALL:ALL) ALL

Now 'su moose':
nano ~/.subversion/servers and in the last [global] sections, set http-proxy- host and port
(reset it back if you won't need to set proxy where you use the liveUSB/DVD).
svn co https://moose.svn.sourceforge.net/svnroot/moose/moose/branches/buildQ moose_src
Inside /home/moose/moose_src, run: make BUILD=release (default is debug)
With this, after booting from liveCD, you can still svn update gui and Demos in place without needing to recompile.
As root: cp -R /home/moose/moose_src/python/moose /usr/lib/python2.7/dist-packages/
Somehow the desktop does not get the PYTHONPATH environment variable from ~/.bashrc .
So desktop icons will not work by just setting PYTHONPATH in .bashrc .
Instead as root: cp -R /home/moose/moose_src/python/moose /usr/lib/python2.7/dist-packages
(Forums claim that /etc/skel gets loaded into /home/ubuntu on login using liveCD/USB,
so user customizations are lost, but my experience is that if you build with the GUI, /home/moose is retained).
But updating moose source or python.moose code will require recompile/sudo copying. 

As moose: cp /home/moose/moose_src/gui/*.desktop /home/moose/Desktop/
Warning: In the MooseGUI.desktop, write /home/moose/... not ~/... . Icon images, etc don't display with ~/ .

Also installed openjdk-6-jre and icedtea-plugin (holder for icedtea-6-plugin) for java applets in firefox.

For further customization of background etc, see here:
(but see only the customization part, the manual mounting etc does not use UCK):
https://help.ubuntu.com/community/LiveCDCustomization

ATTENTION: After customization, double-click 'build' on the GUI (WARNING: do not select 'build' and click ok, as that exits!!)
It'll create the iso, but it will delete the file structure and your customizations at the end.

I tried to be smart and Ctrl-C -ed it in the terminal after customization (note that the script unmounts the filesystems, so no problem with Ctrl-C).
And then used commandline tools as below...
HOWEVER, even though I can chroot and exit multiple times and the customizations are in place,
when I pack-rootfs and pack-iso, the written image is unbootable or still boots in the default ubuntu user.
I looked at the uck-remaster script which the gui calls and did exactly the steps post customization written in that, but no luck :( !
HENCE DO NOT USE COMMANDLINE TOOLS. JUST USE THE GUI ALL THE WAY, EVEN THOUGH IT DELETES AT THE END.

The commandline tools of UCK are in logical order here:
http://uck.svn.sourceforge.net/viewvc/uck/trunk/uck/docs/html/api.html
and more tutorial-like here:
http://fabrizioballiano.net/2007/11/27/remastering-an-ubuntu-alternate-iso-with-ubuntu-customization-kit-the-complete-guide/

To make further changes to an existing customized file structure AFTER exiting the GUI,
you first chroot to the customized file structure (no need of args -- defaults are fine as long as defaults were used in the gui):
sudo uck-remaster-chroot-rootfs [remaster-dir] [what-to-execute]
then make changes, then customize, pack-rootfs and pack the iso:
$CUSTOMIZE_DIR/customize_iso
### No need of finalize step: not present in uck-remaster
### sudo uck-remaster-finalize-alternate gpg-key-id [remaster-dir]
### [get ket from here: http://www.madboa.com/geek/gpg-quickstart/#keyintro ]
sudo uck-remaster-pack-rootfs
sudo uck-remaster-pack-iso [iso-file-name.iso] [remaster-dir] [-h|--hybrid] [-g|--generate-md5] [-a|--arch=x86,x86_64,ia64,ppc]  [-d|--description=CD_description]
sudo uck-remaster-pack-iso moose.iso -h
[--hybrid is for usb-cum-cd. so give -h] The moose.iso is created in folder remaster-new-files.
Do NOT do a uck-remaster-clean or uck-remaster-clean-all at the end if you want to reuse the customized file structure!

To reuse just the settings (WARNING: deletes previous liveCD filestructure without confirmation),
in ~/tmp (default location), run:
sudo uck-remaster /media/data/FILAB/software/linux/ubuntu-12.04-desktop-i386.iso customization-scripts
WARNING: The liveCD file structure gets deleted (without asking) and made again, so be careful :( !!!
