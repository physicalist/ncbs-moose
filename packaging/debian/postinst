#!/bin/sh
# postinst script for moose
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
    	pydistpkg_dir=`python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"`
    	install_prefix=/usr
    	ln -s -f $install_prefix/share/moose/gui/MooseGUI.py $install_prefix/bin/moosegui
    	## byte compile the module, gui, Demos (since, later running as user cannot create .pyc in root-owned dirs)
    	## actually dh_pysupport puts in byte compile instructions later at the end of this file, but those do not seem to work, so put these ones in:
	python -c "import compileall; compileall.compile_dir('$pydistpkg_dir/moose',force=1)"
	python -c "import compileall; compileall.compile_dir('$install_prefix/share/moose/gui',force=1)"
	python -c "import compileall; compileall.compile_dir('$install_prefix/share/moose/Demos',force=1)"
	## copy the .desktop files to the user's desktop too to get icons
	## $HOME refers to home of the user who sudo installs the deb package, not root.
	cp $install_prefix/share/moose/gui/MooseGUI.desktop $HOME/Desktop/
	cp $install_prefix/share/moose/gui/HHSquidDemo.desktop $HOME/Desktop/
	

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
