Creator: Aditya Gilra, NCBS, Bangalore, India, adityag@ncbs.res.in
Date: 20 Sep, 2012

#I'm following instructions at:
#http://developer.ubuntu.com/packaging/html/packaging-new-software.html
#and
#https://wiki.ubuntu.com/PackagingGuide/Complete

These instructions are better than above:
http://www.debian.org/doc/manuals/maint-guide/index.en.html

Packaging for and on Ubuntu 10.04 64bit in a virtualbox virtual machine on pinni@ncbs.

Get moose source from sourceforge using subversion (set proxy in ~/.subversion/servers)
svn co https://moose.svn.sourceforge.net/svnroot/moose/moose/branches/buildQ/ ~/moose_src

As per README, get dependencies:
sudo apt-get install g++ make python-dev libgsl0-dev libpthread-stubs0-dev python-numpy libhdf5-serial-dev
For the GUI:
sudo apt-get install python-matplotlib python-qt4 python-qt4-gl

In ~/moose_src,
make BUILD=release
confirm that gui runs with:
export PYTHONPATH=$PYTHONPATH:/home/user/moose_src/python/
python /home/user/moose_src/gui/MooseGUI.py


--------------------- Create 'debian' directory in ~/moose_src from scratch: -----------

From the instructions at:
http://www.debian.org/doc/manuals/maint-guide/first.en.html

Follow sec 2.7 setting up dh_make in above file, setting DEBEMAIL and DEBFULLNAME
install dh-make and build-essential via synaptic
As per sec 2.9, above
cd ~/moose_src
dh_make --native -s -p moose_2.0 -c lgpl2
[Set version number and licence (lgpl2) above.]
This creates a ~/moose_src/debian directory.

------------------ Put in MOOSE specific information for packaging ----------------------

svn checkout the Debian packaging scripts/files:
svn co https://moose.svn.sourceforge.net/svnroot/moose/packaging/debian ~/moose_src/debian-ref
## copy all the config files
cp debian-ref/* debian/

In ~/moose_src/debian/, you can
edit 'copyright' file to put in author names, change package copyright also to lgpl2 etc.
edit control, postinst and prerm files.
IMPORTANT: In ~/moose_src/debian/control, set architecture to 'i386' or 'amd64' for 32-bit / 64-bit systems.

------------------- Generate /debian/moose/usr/ etc and .deb package ---------------------

In ~/moose_src,
dpkg-buildpackage -b
-b is for only binary package.
will create debian/moose and deeper directories and also ../*.deb files.

------------------------------ Packaging tips ---------------------------------------------

Note that dpkg-buildpackage calls a lot of dh_* scripts. Read their manpages to see what they do.
You can call these individually yourself too for testing.

I've set BUILD=release in debian/rules, and also unexported LD_FLAGS which dpkg-buildpackage sets initially [else these flags cause moose to fail linking during build].

fakeroot debian/rules binary
I've modified rules so that for binary target, it copies (via script copy_moose_install_files) all required/installable moose files into debian/tmp as needed for dh_install below.
UPDATE: I updated Makefile install target to install all files (called by dh_auto_install). There are no extra files to install (thus dh_install presently does nothing). If needed, you could use as indicated here.

dh_install
Refer manpage of dh_install (man dh_install).
To install files that 'make install' does not, first copy them to debian/tmp as above,
then specify the source files/folders and destinations in 'debian/moose.install' as I have done .

[Use `dpkg-buildpackage -s -nc` to not clean before build. But if you change rules, Makefile, etc., dpkg-buildpackage will not realize it. You need to remove the -nc and recompile from beginning :( !]

------------------------------ Testing deb packages ---------------------------------------

list contents of the .deb package:
dpkg-deb -c ~/moose_2.0_amd64.deb

Install lintian via synaptic and use it on moose*.dsc and moose*.deb to check for certain errors.

